{"version":3,"sources":["components/Profile/Profile.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Statistics/StatisticsItem/StatisticsItem.module.css","components/Statistics/Statistics.module.css","components/TransactionHistory/TransactionHistoryItem/TransactionHistoryItem.module.css","components/FriendList/FriendList.module.css","components/Profile/Profile.js","components/Statistics/StatisticsItem/StatisticsItem.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistoryItem/TransactionHistoryItem.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","name","tag","location","avatar","stats","className","s","profile","description","src","alt","item","label","quantity","followers","views","likes","getRandomColor","min","max","Math","ceil","floor","random","randomColor","colorValue","backgroundColor","StatisticsItem","percentage","style","Statistics","title","statistics","list","map","stat","id","FriendListItem","isOnline","online","offline","width","FriendList","friends","friend","TransactionHistoryItem","type","amount","currency","data","TransactionHistory","items","history","thead","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d022e86.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2mjxe\",\"avatar\":\"Profile_avatar__2Wn0I\",\"description\":\"Profile_description__1djye\",\"name\":\"Profile_name__kPMu0\",\"tag\":\"Profile_tag__1LAQF\",\"location\":\"Profile_location__1BYiq\",\"stats\":\"Profile_stats__IxbS3\",\"item\":\"Profile_item__1osZA\",\"label\":\"Profile_label__3jX5T\",\"quantity\":\"Profile_quantity__3H3V3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__MkPqi\",\"avatar\":\"FriendListItem_avatar__3BG8b\",\"name\":\"FriendListItem_name__2J31B\",\"online\":\"FriendListItem_online__btmaE\",\"offline\":\"FriendListItem_offline__3FRkh FriendListItem_online__btmaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__I9oZC\",\"thead\":\"TransactionHistory_thead__2qoec\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"StatisticsItem_item__1cbEh\",\"label\":\"StatisticsItem_label__1IGdp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3h1wH\",\"title\":\"Statistics_title__1ytul\",\"list\":\"Statistics_list__MWx30\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"data\":\"TransactionHistoryItem_data__2zw8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__3uSqV\"};","import PropTypes from 'prop-types';\r\n\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ name, tag, location, avatar, stats }) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\r\n        <p className={s.name}>{name}</p>\r\n        <p className={s.tag}>{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={s.item}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  avatar: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './StatisticsItem.module.css';\r\n\r\nfunction getRandomColor(min, max) {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nconst randomColor = () => {\r\n  const colorValue = `${getRandomColor(0, 255)},${getRandomColor(\r\n    0,\r\n    255,\r\n  )},${getRandomColor(0, 255)}, 0.4`;\r\n\r\n  return {\r\n    backgroundColor: `rgba(${colorValue})`,\r\n  };\r\n};\r\n\r\nconst StatisticsItem = ({ label, percentage }) => {\r\n  return (\r\n    <li className={s.item} style={randomColor()}>\r\n      <span className={s.label}>{label}</span>\r\n      <span className={s.percentage}>{percentage}%</span>\r\n    </li>\r\n  );\r\n};\r\n\r\nStatisticsItem.propTypes = {\r\n  stats: PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    percentage: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default StatisticsItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport StatisticsItem from './StatisticsItem/StatisticsItem';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n      <ul className={s.list}>\r\n        {stats.map(stat => (\r\n          <StatisticsItem\r\n            key={stat.id}\r\n            label={stat.label}\r\n            percentage={stat.percentage}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <li className={s.item}>\r\n      <span className={isOnline ? s.online : s.offline}></span>\r\n      <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\r\n      <p className={s.name}>{name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  friend: PropTypes.shape({\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n  }),\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport FriendListItem from './FriendListItem/FriendListItem';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={s.list}>\r\n      {friends.map(friend => (\r\n        <FriendListItem\r\n          avatar={friend.avatar}\r\n          name={friend.name}\r\n          isOnline={friend.isOnline}\r\n          key={friend.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n      id: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './TransactionHistoryItem.module.css';\r\n\r\nconst TransactionHistoryItem = ({ id, type, amount, currency }) => {\r\n  return (\r\n    <tr key={id}>\r\n      <td className={s.data}>{type}</td>\r\n      <td className={s.data}>{amount}</td>\r\n      <td className={s.data}>{currency}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nTransactionHistoryItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n  }),\r\n};\r\nexport default TransactionHistoryItem;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport TransactionHistoryItem from './TransactionHistoryItem/TransactionHistoryItem';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={s.history}>\r\n      <thead>\r\n        <tr>\r\n          <th className={s.thead}>Type</th>\r\n          <th className={s.thead}>Amount</th>\r\n          <th className={s.thead}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(item => (\r\n          <TransactionHistoryItem\r\n            key={item.id}\r\n            type={item.type}\r\n            amount={item.amount}\r\n            currency={item.currency}\r\n          />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import Profile from './Profile/Profile';\nimport user from '../data/user.json';\nimport Statistics from './Statistics/Statistics';\nimport statisticalData from '../data/statistical-data.json';\nimport FriendList from './FriendList/FriendList';\nimport friends from '../data/friends.json';\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\nimport transactions from '../data/transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}